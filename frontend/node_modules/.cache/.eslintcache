[{"/Users/dan/Desktop/Hack-the-North/frontend/src/index.js":"1","/Users/dan/Desktop/Hack-the-North/frontend/src/App.js":"2","/Users/dan/Desktop/Hack-the-North/frontend/src/pages/Recipes.jsx":"3","/Users/dan/Desktop/Hack-the-North/frontend/src/pages/Home/Home.jsx":"4","/Users/dan/Desktop/Hack-the-North/frontend/src/pages/FindRecipe/FindRecipe.jsx":"5","/Users/dan/Desktop/Hack-the-North/frontend/src/pages/RandomRecipe.jsx":"6","/Users/dan/Desktop/Hack-the-North/frontend/src/pages/NotFound.jsx":"7","/Users/dan/Desktop/Hack-the-North/frontend/src/components/Navbar.jsx":"8","/Users/dan/Desktop/Hack-the-North/frontend/src/pages/AddRecipe/AddRecipe.jsx":"9","/Users/dan/Desktop/Hack-the-North/frontend/src/components/AddRecipeButton.jsx":"10","/Users/dan/Desktop/Hack-the-North/frontend/src/components/BottomNavbar.jsx":"11","/Users/dan/Desktop/Hack-the-North/frontend/src/components/SearchBar.jsx":"12","/Users/dan/Desktop/Hack-the-North/frontend/src/components/Footer/Footer.jsx":"13"},{"size":354,"mtime":1663420485394,"results":"14","hashOfConfig":"15"},{"size":1049,"mtime":1663464334343,"results":"16","hashOfConfig":"15"},{"size":114,"mtime":1663419786167,"results":"17","hashOfConfig":"15"},{"size":1646,"mtime":1663464334346,"results":"18","hashOfConfig":"15"},{"size":7838,"mtime":1663437626230,"results":"19","hashOfConfig":"15"},{"size":2434,"mtime":1663464334347,"results":"20","hashOfConfig":"15"},{"size":540,"mtime":1663437626230,"results":"21","hashOfConfig":"15"},{"size":2615,"mtime":1663464334345,"results":"22","hashOfConfig":"15"},{"size":7924,"mtime":1663464145576,"results":"23","hashOfConfig":"15"},{"size":434,"mtime":1663420485393,"results":"24","hashOfConfig":"15"},{"size":1571,"mtime":1663449058019,"results":"25","hashOfConfig":"15"},{"size":1421,"mtime":1663419786165,"results":"26","hashOfConfig":"15"},{"size":754,"mtime":1663464334343,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"px2ssu",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"31"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"31"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dan/Desktop/Hack-the-North/frontend/src/index.js",[],[],[],"/Users/dan/Desktop/Hack-the-North/frontend/src/App.js",[],[],"/Users/dan/Desktop/Hack-the-North/frontend/src/pages/Recipes.jsx",[],[],"/Users/dan/Desktop/Hack-the-North/frontend/src/pages/Home/Home.jsx",[],[],"/Users/dan/Desktop/Hack-the-North/frontend/src/pages/FindRecipe/FindRecipe.jsx",["71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87"],[],"import {React, useState} from 'react'\n\nimport {\n    FormControl,\n    FormLabel,\n    FormErrorMessage,\n    Input,\n    Center,\n    Button,\n    NumberInput,\n    NumberInputField,\n    NumberInputStepper,\n    NumberIncrementStepper,\n    NumberDecrementStepper,\n    Checkbox, CheckboxGroup,\n    Stack,\n    Accordion,\n    AccordionItem,\n    AccordionButton,\n    AccordionPanel,\n    AccordionIcon,  \n    Box\n} from '@chakra-ui/react'  \n\nconst AddRecipe = () => {\n    const [input, setInput] = useState('')\n\n    const handleInputChange = (e) => setInput(e.target.value)\n\n    const isError = input === ''\n\n    // let \n  \n    return (\n        <>\n            <h1 style = {{textAlign: 'center', fontSize: 'max(3vw, 30px)', marginTop:'25px'}}>MyRecipePal Recipe Finder</h1>\n            <p style = {{textAlign: 'center', padding: '0vw 20vw'}}>Using this recipe finder, you can filter recipes based on your personal needs, like allergies and food preferences. You can also ask for a specific amount of calories, proteins, or carbohydrates to ensure that you meet your daily goals. If you're low on time, you can filter for recipes that are quick to make.</p>\n            \n            <FormControl>\n                <FormLabel style = {{textAlign: 'center', fontSize: 'max(1.5vw, 15px)', marginTop:'25px'}}>Number of servings</FormLabel>\n                <Center>\n                <NumberInput\n                    defaultValue={1}\n                    max={10}\n                    min={1}\n                    keepWithinRange={true}\n                    clampValueOnBlur={false}\n                    id = 'servings'\n                >\n                    <NumberInputField />\n                    <NumberInputStepper>\n                    <NumberIncrementStepper />\n                    <NumberDecrementStepper />\n                    </NumberInputStepper>\n                </NumberInput>                \n                </Center>\n\n                <FormLabel style = {{textAlign: 'center', fontSize: 'max(1.5vw, 15px)', marginTop:'25px'}}>Dietary Restrictions</FormLabel>\n                \n                <Center>\n                <Stack spacing={[1, 5]} direction={['column', 'row']}>\n                    <Checkbox className = 'check'>Vegan</Checkbox>\n                    <Checkbox className = 'check'>Kosher</Checkbox>\n                    <Checkbox className = 'check'>Halal</Checkbox>\n                    <Checkbox className = 'check'>Gluten Intolerance</Checkbox>\n                    <Checkbox className = 'check'>Lactose Intolerance</Checkbox>\n                </Stack>\n                </Center>\n\n                <FormLabel style = {{textAlign: 'center', fontSize: 'max(1.5vw, 15px)', marginTop:'25px'}}>Allergies</FormLabel>\n                \n                <Center>\n                <Stack spacing={[1, 5]} direction={['column', 'row']}>\n                    <Checkbox className = 'check'>Peanut Butter</Checkbox>\n                    <Checkbox className = 'check'>Shellfish</Checkbox>\n                    <Checkbox className = 'check'>Tree nuts</Checkbox>\n                    <Checkbox className = 'check'>Eggs</Checkbox>\n                    <Checkbox className = 'check'>Fish</Checkbox>\n                </Stack>\n                </Center>\n\n                {/* <Accordion defaultIndex={[0]} width = '60%' marginLeft ='auto' marginRight='auto' marginTop = '25px' allowToggle>\n                    <AccordionItem>\n                        <h2>\n                        <AccordionButton>\n                            <Box flex='1' textAlign='left'>\n                            More options\n                            </Box>\n                            <AccordionIcon />\n                        </AccordionButton>\n                        </h2>\n\n                        <AccordionPanel > */}\n                <div style = {{width: '60%', marginLeft: 'auto', marginRight: 'auto'}}>\n\n                <FormControl>\n                <FormLabel style = {{textAlign: 'center', fontSize: 'max(1.5vw, 15px)', marginTop:'25px'}}>Maximum Calories</FormLabel>\n                <NumberInput \n                defaultValue={200} \n                min={0} \n                max={2000}\n                id = 'cals'\n                >\n                    <NumberInputField />\n                    <NumberInputStepper>\n                        <NumberIncrementStepper />\n                        <NumberDecrementStepper />\n                    </NumberInputStepper>\n                </NumberInput>                \n                </FormControl>\n                        {/* </AccordionPanel> */}\n\n                        {/* <AccordionPanel > */}\n                <FormControl>\n                <FormLabel style = {{textAlign: 'center', fontSize: 'max(1.5vw, 15px)', marginTop:'25px'}}>Maximum Protein (grams)</FormLabel>\n                <NumberInput \n                defaultValue={10} \n                min={0} \n                max={175}\n                id = 'proteins'\n                >\n                    <NumberInputField />\n                    <NumberInputStepper>\n                        <NumberIncrementStepper />\n                        <NumberDecrementStepper />\n                    </NumberInputStepper>\n                </NumberInput>                \n                </FormControl>\n                        {/* </AccordionPanel> */}\n\n                        {/* <AccordionPanel > */}\n                <FormControl>\n                <FormLabel style = {{textAlign: 'center', fontSize: 'max(1.5vw, 15px)', marginTop:'25px'}}>Maximum Carbohydrates (grams)</FormLabel>\n                <NumberInput \n                defaultValue={20} \n                min={0} \n                max={325}\n                id = 'carbs'\n                >\n                    <NumberInputField />\n                    <NumberInputStepper>\n                        <NumberIncrementStepper />\n                        <NumberDecrementStepper />\n                    </NumberInputStepper>\n                </NumberInput>                \n                </FormControl>\n                        {/* </AccordionPanel> */}\n\n                        {/* <AccordionPanel > */}\n                <FormControl>\n                <FormLabel style = {{textAlign: 'center', fontSize: 'max(1.5vw, 15px)', marginTop:'25px'}}>Maximum Cooking Time (minutes)</FormLabel>\n                <NumberInput \n                defaultValue={30} \n                min={15} \n                max={300}\n                id = 'time'\n                >\n                    <NumberInputField />\n                    <NumberInputStepper>\n                        <NumberIncrementStepper />\n                        <NumberDecrementStepper />\n                    </NumberInputStepper>\n                </NumberInput>                \n                </FormControl>\n                        {/* </AccordionPanel> */}\n\n                    {/* </AccordionItem>\n                </Accordion> */}\n                </div>\n\n                <Center>\n                    <Button\n                        mt={4}\n                        colorScheme='teal'\n                        type='submit'\n                        marginBottom='25px'\n                        onClick = {() => {\n                            let servings = document.getElementById(\"servings\").value;\n                            let checkmarks = document.getElementsByClassName(\"check\") // use foreach for this\n                            let cals = document.getElementById('cals')\n                            let proteins = document.getElementById('proteins')\n                            let carbs = document.getElementById('carbs')\n                            let time = document.getElementById('time')\n                        }}\n                        >\n                        Give me my recipe!\n                    </Button>\n                </Center>\n\n            </FormControl>    \n        </>\n    )\n}\n\nexport default AddRecipe","/Users/dan/Desktop/Hack-the-North/frontend/src/pages/RandomRecipe.jsx",["88","89","90","91","92","93","94","95"],[],"/Users/dan/Desktop/Hack-the-North/frontend/src/pages/NotFound.jsx",[],[],"/Users/dan/Desktop/Hack-the-North/frontend/src/components/Navbar.jsx",["96","97","98"],[],"/Users/dan/Desktop/Hack-the-North/frontend/src/pages/AddRecipe/AddRecipe.jsx",["99","100","101","102","103"],[],"/Users/dan/Desktop/Hack-the-North/frontend/src/components/AddRecipeButton.jsx",[],[],"/Users/dan/Desktop/Hack-the-North/frontend/src/components/BottomNavbar.jsx",["104","105"],[],"import React, { useState, useEffect } from 'react'\n\n\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nconst BottomNavbar = ({clickNewRecipe}) => {\n    const [windowDimenion, detectHW] = useState({\n        winWidth: window.innerWidth,\n        winHeight: window.innerHeight,\n    })\n    const detectSize = () => {\n        detectHW({\n        winWidth: window.innerWidth,\n        winHeight: window.innerHeight,\n        })\n    }\n\n    useEffect(() => {\n        window.addEventListener('resize', detectSize)\n\n        return () => {\n        window.removeEventListener('resize', detectSize)\n        }\n    }, [windowDimenion])\n\n    return (\n        <>\n        <Navbar fixed=\"bottom\" bg=\"light\" expand=\"lg\" >\n            <Container fluid>\n                <Nav\n                    className=\" my-2 my-lg-0 me-auto\"\n                    style={{ maxHeight: '100px' }}\n                >\n                    <Button class=\"btn btn-primary\" style={{backgroundColor: \"#48BB78\",\"width\": windowDimenion.winWidth / 2 + \"px\"}}>Save to favourites</Button>\n\n                    <Button class=\"btn btn-primary\" onClick={clickNewRecipe} style={{backgroundColor: \"#48BB78\",\"width\": windowDimenion.winWidth / 2 - 25 + \"px\"}}>Give me a new recipe!</Button>\n                </Nav>\n            </Container>\n        </Navbar>\n        </>\n    );\n};\n\nexport default BottomNavbar;","/Users/dan/Desktop/Hack-the-North/frontend/src/components/SearchBar.jsx",["106"],[],"import { Input, InputGroup, InputLeftElement, Stack } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { CloseIcon, SearchIcon } from \"@chakra-ui/icons\";\n\nconst SearchBar = () => {\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\n  const [recipeInput, setRecipeInput] = useState(\"\");\n\n  const handleFilter = (e) => {\n    e.preventDefault();\n    setRecipeInput(e.target.value);\n  };\n\n  const clearInput = () => {\n    console.log(\"reached\");\n\n    setFilteredRecipes([]);\n    setRecipeInput(\"\");\n  };\n\n  return (\n    <>\n      <Stack spacing={4}>\n        <InputGroup>\n          <InputLeftElement\n            pointerEvents=\"none\"\n            children={\n              recipeInput.length === 0 ? (\n                <SearchIcon />\n              ) : (\n                <CloseIcon onClick={clearInput} />\n              )\n            }\n          />\n          <Input\n            type=\"text\"\n            placeholder=\"I want to eat...\"\n            _placeholder={{color: 'white'}}\n            onChange={handleFilter}\n          />\n        </InputGroup>\n      </Stack>\n    </>\n    //   <>\n    //     <Input\n    //       type=\"text\"\n    //       placeholder=\"Search by recipe name\"\n    //       value={recipeInput}\n    //       onChange={handleFilter}\n    //     />\n    //     {recipeInput.length === 0 ? <SearchIcon /> : <CloseIcon />}\n    //   </>\n  );\n};\n\nexport default SearchBar;","/Users/dan/Desktop/Hack-the-North/frontend/src/components/Footer/Footer.jsx",[],[],{"ruleId":"107","severity":1,"message":"108","line":6,"column":5,"nodeType":"109","messageId":"110","endLine":6,"endColumn":21},{"ruleId":"107","severity":1,"message":"111","line":7,"column":5,"nodeType":"109","messageId":"110","endLine":7,"endColumn":10},{"ruleId":"107","severity":1,"message":"112","line":15,"column":15,"nodeType":"109","messageId":"110","endLine":15,"endColumn":28},{"ruleId":"107","severity":1,"message":"113","line":17,"column":5,"nodeType":"109","messageId":"110","endLine":17,"endColumn":14},{"ruleId":"107","severity":1,"message":"114","line":18,"column":5,"nodeType":"109","messageId":"110","endLine":18,"endColumn":18},{"ruleId":"107","severity":1,"message":"115","line":19,"column":5,"nodeType":"109","messageId":"110","endLine":19,"endColumn":20},{"ruleId":"107","severity":1,"message":"116","line":20,"column":5,"nodeType":"109","messageId":"110","endLine":20,"endColumn":19},{"ruleId":"107","severity":1,"message":"117","line":21,"column":5,"nodeType":"109","messageId":"110","endLine":21,"endColumn":18},{"ruleId":"107","severity":1,"message":"118","line":22,"column":5,"nodeType":"109","messageId":"110","endLine":22,"endColumn":8},{"ruleId":"107","severity":1,"message":"119","line":28,"column":11,"nodeType":"109","messageId":"110","endLine":28,"endColumn":28},{"ruleId":"107","severity":1,"message":"120","line":30,"column":11,"nodeType":"109","messageId":"110","endLine":30,"endColumn":18},{"ruleId":"107","severity":1,"message":"121","line":178,"column":33,"nodeType":"109","messageId":"110","endLine":178,"endColumn":41},{"ruleId":"107","severity":1,"message":"122","line":179,"column":33,"nodeType":"109","messageId":"110","endLine":179,"endColumn":43},{"ruleId":"107","severity":1,"message":"123","line":180,"column":33,"nodeType":"109","messageId":"110","endLine":180,"endColumn":37},{"ruleId":"107","severity":1,"message":"124","line":181,"column":33,"nodeType":"109","messageId":"110","endLine":181,"endColumn":41},{"ruleId":"107","severity":1,"message":"125","line":182,"column":33,"nodeType":"109","messageId":"110","endLine":182,"endColumn":38},{"ruleId":"107","severity":1,"message":"126","line":183,"column":33,"nodeType":"109","messageId":"110","endLine":183,"endColumn":37},{"ruleId":"107","severity":1,"message":"127","line":3,"column":3,"nodeType":"109","messageId":"110","endLine":3,"endColumn":9},{"ruleId":"107","severity":1,"message":"128","line":4,"column":3,"nodeType":"109","messageId":"110","endLine":4,"endColumn":12},{"ruleId":"107","severity":1,"message":"129","line":8,"column":3,"nodeType":"109","messageId":"110","endLine":8,"endColumn":7},{"ruleId":"107","severity":1,"message":"130","line":16,"column":25,"nodeType":"109","messageId":"110","endLine":16,"endColumn":29},{"ruleId":"107","severity":1,"message":"131","line":16,"column":31,"nodeType":"109","messageId":"110","endLine":16,"endColumn":40},{"ruleId":"107","severity":1,"message":"132","line":16,"column":42,"nodeType":"109","messageId":"110","endLine":16,"endColumn":47},{"ruleId":"133","severity":1,"message":"134","line":26,"column":40,"nodeType":"109","endLine":26,"endColumn":47},{"ruleId":"133","severity":1,"message":"135","line":36,"column":5,"nodeType":"136","endLine":36,"endColumn":13,"suggestions":"137"},{"ruleId":"107","severity":1,"message":"138","line":7,"column":3,"nodeType":"109","messageId":"110","endLine":7,"endColumn":10},{"ruleId":"107","severity":1,"message":"129","line":15,"column":3,"nodeType":"109","messageId":"110","endLine":15,"endColumn":7},{"ruleId":"107","severity":1,"message":"139","line":41,"column":7,"nodeType":"109","messageId":"110","endLine":41,"endColumn":16},{"ruleId":"107","severity":1,"message":"140","line":18,"column":3,"nodeType":"109","messageId":"110","endLine":18,"endColumn":8},{"ruleId":"107","severity":1,"message":"141","line":21,"column":3,"nodeType":"109","messageId":"110","endLine":21,"endColumn":5},{"ruleId":"107","severity":1,"message":"142","line":35,"column":10,"nodeType":"109","messageId":"110","endLine":35,"endColumn":16},{"ruleId":"133","severity":1,"message":"143","line":42,"column":40,"nodeType":"109","endLine":42,"endColumn":47},{"ruleId":"107","severity":1,"message":"144","line":88,"column":9,"nodeType":"109","messageId":"110","endLine":88,"endColumn":24},{"ruleId":"107","severity":1,"message":"145","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":12},{"ruleId":"107","severity":1,"message":"146","line":9,"column":8,"nodeType":"109","messageId":"110","endLine":9,"endColumn":19},{"ruleId":"107","severity":1,"message":"147","line":7,"column":10,"nodeType":"109","messageId":"110","endLine":7,"endColumn":25},"no-unused-vars","'FormErrorMessage' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'CheckboxGroup' is defined but never used.","'Accordion' is defined but never used.","'AccordionItem' is defined but never used.","'AccordionButton' is defined but never used.","'AccordionPanel' is defined but never used.","'AccordionIcon' is defined but never used.","'Box' is defined but never used.","'handleInputChange' is assigned a value but never used.","'isError' is assigned a value but never used.","'servings' is assigned a value but never used.","'checkmarks' is assigned a value but never used.","'cals' is assigned a value but never used.","'proteins' is assigned a value but never used.","'carbs' is assigned a value but never used.","'time' is assigned a value but never used.","'Center' is defined but never used.","'Container' is defined but never used.","'Text' is defined but never used.","'Fade' is defined but never used.","'ScaleFade' is defined but never used.","'Slide' is defined but never used.","react-hooks/exhaustive-deps","The ref value 'InstructionsRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'InstructionsRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'onToggle'. Either include it or remove the dependency array.","ArrayExpression",["148"],"'Heading' is defined but never used.","'searchBar' is assigned a value but never used.","'Tfoot' is defined but never used.","'Td' is defined but never used.","'recipe' is assigned a value but never used.","The ref value 'instructionsRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'instructionsRef.current' to a variable inside the effect, and use that variable in the cleanup function.","'recipeNameError' is assigned a value but never used.","'Form' is defined but never used.","'NavDropdown' is defined but never used.","'filteredRecipes' is assigned a value but never used.",{"desc":"149","fix":"150"},"Update the dependencies array to be: [change, onToggle]",{"range":"151","text":"152"},[931,939],"[change, onToggle]"]
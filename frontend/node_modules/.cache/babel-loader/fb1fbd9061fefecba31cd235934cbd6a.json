{"ast":null,"code":"// src/use-counter.ts\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\nimport { clampValue, countDecimalPlaces, toPrecision } from \"@chakra-ui/number-utils\";\nimport { useCallback, useState } from \"react\";\n\nfunction useCounter() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    onChange,\n    precision: precisionProp,\n    defaultValue,\n    value: valueProp,\n    step: stepProp = 1,\n    min = Number.MIN_SAFE_INTEGER,\n    max = Number.MAX_SAFE_INTEGER,\n    keepWithinRange = true\n  } = props;\n  const onChangeProp = useCallbackRef(onChange);\n  const [valueState, setValue] = useState(() => {\n    if (defaultValue == null) return \"\";\n    return cast(defaultValue, stepProp, precisionProp) ?? \"\";\n  });\n  const isControlled = typeof valueProp !== \"undefined\";\n  const value = isControlled ? valueProp : valueState;\n  const decimalPlaces = getDecimalPlaces(parse(value), stepProp);\n  const precision = precisionProp ?? decimalPlaces;\n  const update = useCallback(next => {\n    if (next === value) return;\n\n    if (!isControlled) {\n      setValue(next.toString());\n    }\n\n    onChangeProp == null ? void 0 : onChangeProp(next.toString(), parse(next));\n  }, [onChangeProp, isControlled, value]);\n  const clamp = useCallback(value2 => {\n    let nextValue = value2;\n\n    if (keepWithinRange) {\n      nextValue = clampValue(nextValue, min, max);\n    }\n\n    return toPrecision(nextValue, precision);\n  }, [precision, keepWithinRange, max, min]);\n  const increment = useCallback(function () {\n    let step = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : stepProp;\n    let next;\n\n    if (value === \"\") {\n      next = parse(step);\n    } else {\n      next = parse(value) + step;\n    }\n\n    next = clamp(next);\n    update(next);\n  }, [clamp, stepProp, update, value]);\n  const decrement = useCallback(function () {\n    let step = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : stepProp;\n    let next;\n\n    if (value === \"\") {\n      next = parse(-step);\n    } else {\n      next = parse(value) - step;\n    }\n\n    next = clamp(next);\n    update(next);\n  }, [clamp, stepProp, update, value]);\n  const reset = useCallback(() => {\n    let next;\n\n    if (defaultValue == null) {\n      next = \"\";\n    } else {\n      next = cast(defaultValue, stepProp, precisionProp) ?? min;\n    }\n\n    update(next);\n  }, [defaultValue, precisionProp, stepProp, update, min]);\n  const castValue = useCallback(value2 => {\n    const nextValue = cast(value2, stepProp, precision) ?? min;\n    update(nextValue);\n  }, [precision, stepProp, update, min]);\n  const valueAsNumber = parse(value);\n  const isOutOfRange = valueAsNumber > max || valueAsNumber < min;\n  const isAtMax = valueAsNumber === max;\n  const isAtMin = valueAsNumber === min;\n  return {\n    isOutOfRange,\n    isAtMax,\n    isAtMin,\n    precision,\n    value,\n    valueAsNumber,\n    update,\n    reset,\n    increment,\n    decrement,\n    clamp,\n    cast: castValue,\n    setValue\n  };\n}\n\nfunction parse(value) {\n  return parseFloat(value.toString().replace(/[^\\w.-]+/g, \"\"));\n}\n\nfunction getDecimalPlaces(value, step) {\n  return Math.max(countDecimalPlaces(step), countDecimalPlaces(value));\n}\n\nfunction cast(value, step, precision) {\n  const parsedValue = parse(value);\n  if (Number.isNaN(parsedValue)) return void 0;\n  const decimalPlaces = getDecimalPlaces(parsedValue, step);\n  return toPrecision(parsedValue, precision ?? decimalPlaces);\n}\n\nexport { useCounter };","map":{"version":3,"names":["useCallbackRef","clampValue","countDecimalPlaces","toPrecision","useCallback","useState","useCounter","props","onChange","precision","precisionProp","defaultValue","value","valueProp","step","stepProp","min","Number","MIN_SAFE_INTEGER","max","MAX_SAFE_INTEGER","keepWithinRange","onChangeProp","valueState","setValue","cast","isControlled","decimalPlaces","getDecimalPlaces","parse","update","next","toString","clamp","value2","nextValue","increment","decrement","reset","castValue","valueAsNumber","isOutOfRange","isAtMax","isAtMin","parseFloat","replace","Math","parsedValue","isNaN"],"sources":["C:/JZ/code/Hack-the-North/frontend/node_modules/@chakra-ui/counter/dist/index.esm.js"],"sourcesContent":["// src/use-counter.ts\r\nimport { useCallbackRef } from \"@chakra-ui/react-use-callback-ref\";\r\nimport {\r\n  clampValue,\r\n  countDecimalPlaces,\r\n  toPrecision\r\n} from \"@chakra-ui/number-utils\";\r\nimport { useCallback, useState } from \"react\";\r\nfunction useCounter(props = {}) {\r\n  const {\r\n    onChange,\r\n    precision: precisionProp,\r\n    defaultValue,\r\n    value: valueProp,\r\n    step: stepProp = 1,\r\n    min = Number.MIN_SAFE_INTEGER,\r\n    max = Number.MAX_SAFE_INTEGER,\r\n    keepWithinRange = true\r\n  } = props;\r\n  const onChangeProp = useCallbackRef(onChange);\r\n  const [valueState, setValue] = useState(() => {\r\n    if (defaultValue == null)\r\n      return \"\";\r\n    return cast(defaultValue, stepProp, precisionProp) ?? \"\";\r\n  });\r\n  const isControlled = typeof valueProp !== \"undefined\";\r\n  const value = isControlled ? valueProp : valueState;\r\n  const decimalPlaces = getDecimalPlaces(parse(value), stepProp);\r\n  const precision = precisionProp ?? decimalPlaces;\r\n  const update = useCallback((next) => {\r\n    if (next === value)\r\n      return;\r\n    if (!isControlled) {\r\n      setValue(next.toString());\r\n    }\r\n    onChangeProp == null ? void 0 : onChangeProp(next.toString(), parse(next));\r\n  }, [onChangeProp, isControlled, value]);\r\n  const clamp = useCallback((value2) => {\r\n    let nextValue = value2;\r\n    if (keepWithinRange) {\r\n      nextValue = clampValue(nextValue, min, max);\r\n    }\r\n    return toPrecision(nextValue, precision);\r\n  }, [precision, keepWithinRange, max, min]);\r\n  const increment = useCallback((step = stepProp) => {\r\n    let next;\r\n    if (value === \"\") {\r\n      next = parse(step);\r\n    } else {\r\n      next = parse(value) + step;\r\n    }\r\n    next = clamp(next);\r\n    update(next);\r\n  }, [clamp, stepProp, update, value]);\r\n  const decrement = useCallback((step = stepProp) => {\r\n    let next;\r\n    if (value === \"\") {\r\n      next = parse(-step);\r\n    } else {\r\n      next = parse(value) - step;\r\n    }\r\n    next = clamp(next);\r\n    update(next);\r\n  }, [clamp, stepProp, update, value]);\r\n  const reset = useCallback(() => {\r\n    let next;\r\n    if (defaultValue == null) {\r\n      next = \"\";\r\n    } else {\r\n      next = cast(defaultValue, stepProp, precisionProp) ?? min;\r\n    }\r\n    update(next);\r\n  }, [defaultValue, precisionProp, stepProp, update, min]);\r\n  const castValue = useCallback((value2) => {\r\n    const nextValue = cast(value2, stepProp, precision) ?? min;\r\n    update(nextValue);\r\n  }, [precision, stepProp, update, min]);\r\n  const valueAsNumber = parse(value);\r\n  const isOutOfRange = valueAsNumber > max || valueAsNumber < min;\r\n  const isAtMax = valueAsNumber === max;\r\n  const isAtMin = valueAsNumber === min;\r\n  return {\r\n    isOutOfRange,\r\n    isAtMax,\r\n    isAtMin,\r\n    precision,\r\n    value,\r\n    valueAsNumber,\r\n    update,\r\n    reset,\r\n    increment,\r\n    decrement,\r\n    clamp,\r\n    cast: castValue,\r\n    setValue\r\n  };\r\n}\r\nfunction parse(value) {\r\n  return parseFloat(value.toString().replace(/[^\\w.-]+/g, \"\"));\r\n}\r\nfunction getDecimalPlaces(value, step) {\r\n  return Math.max(countDecimalPlaces(step), countDecimalPlaces(value));\r\n}\r\nfunction cast(value, step, precision) {\r\n  const parsedValue = parse(value);\r\n  if (Number.isNaN(parsedValue))\r\n    return void 0;\r\n  const decimalPlaces = getDecimalPlaces(parsedValue, step);\r\n  return toPrecision(parsedValue, precision ?? decimalPlaces);\r\n}\r\nexport {\r\n  useCounter\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// ../../react-shim.js\nimport React from \"react\"; // src/image.tsx\n\nimport { chakra, forwardRef as forwardRef2 } from \"@chakra-ui/system\"; // ../../utilities/object-utils/dist/index.esm.js\n\nfunction omit(object) {\n  let keysToOmit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  const clone = Object.assign({}, object);\n\n  for (const key of keysToOmit) {\n    if (key in clone) delete clone[key];\n  }\n\n  return clone;\n} // src/use-image.ts\n\n\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\nfunction useImage(props) {\n  const {\n    loading,\n    src,\n    srcSet,\n    onLoad,\n    onError,\n    crossOrigin,\n    sizes,\n    ignoreFallback\n  } = props;\n  const [status, setStatus] = useState(\"pending\");\n  useEffect(() => {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  const imageRef = useRef();\n  const load = useCallback(() => {\n    if (!src) return;\n    flush();\n    const img = new Image();\n    img.src = src;\n    if (crossOrigin) img.crossOrigin = crossOrigin;\n    if (srcSet) img.srcset = srcSet;\n    if (sizes) img.sizes = sizes;\n    if (loading) img.loading = loading;\n\n    img.onload = event => {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n\n    img.onerror = error => {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n\n  const flush = () => {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n\n  useSafeLayoutEffect(() => {\n    if (ignoreFallback) return void 0;\n\n    if (status === \"loading\") {\n      load();\n    }\n\n    return () => {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  return ignoreFallback ? \"loaded\" : status;\n}\n\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\"; // src/native-image.tsx\n\n\nimport { forwardRef } from \"@chakra-ui/system\";\nvar NativeImage = forwardRef(function NativeImage2(props, ref) {\n  const {\n    htmlWidth,\n    htmlHeight,\n    alt,\n    ...rest\n  } = props;\n  return /* @__PURE__ */React.createElement(\"img\", {\n    width: htmlWidth,\n    height: htmlHeight,\n    ref,\n    alt,\n    ...rest\n  });\n});\nNativeImage.displayName = \"NativeImage\"; // src/image.tsx\n\nvar Image2 = forwardRef2(function Image3(props, ref) {\n  const {\n    fallbackSrc,\n    fallback,\n    src,\n    srcSet,\n    align,\n    fit,\n    loading,\n    ignoreFallback,\n    crossOrigin,\n    fallbackStrategy = \"beforeLoadOrError\",\n    referrerPolicy,\n    ...rest\n  } = props;\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\n  const status = useImage({ ...props,\n    ignoreFallback: shouldIgnoreFallbackImage\n  });\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\n  const shared = {\n    ref,\n    objectFit: fit,\n    objectPosition: align,\n    ...(shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"]))\n  };\n\n  if (showFallbackImage) {\n    if (fallback) return fallback;\n    return /* @__PURE__ */React.createElement(chakra.img, {\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc,\n      ...shared\n    });\n  }\n\n  return /* @__PURE__ */React.createElement(chakra.img, {\n    as: NativeImage,\n    src,\n    srcSet,\n    crossOrigin,\n    loading,\n    referrerPolicy,\n    className: \"chakra-image\",\n    ...shared\n  });\n});\nImage2.displayName = \"Image\"; // src/img.tsx\n\nimport { chakra as chakra2, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\nvar Img = forwardRef3((props, ref) => /* @__PURE__ */React.createElement(chakra2.img, {\n  ref,\n  as: NativeImage,\n  className: \"chakra-image\",\n  ...props\n}));\nexport { Image2 as Image, Img, shouldShowFallbackImage, useImage };","map":{"version":3,"names":["React","chakra","forwardRef","forwardRef2","omit","object","keysToOmit","clone","Object","assign","key","useSafeLayoutEffect","useCallback","useEffect","useRef","useState","useImage","props","loading","src","srcSet","onLoad","onError","crossOrigin","sizes","ignoreFallback","status","setStatus","imageRef","load","flush","img","Image","srcset","onload","event","onerror","error","current","shouldShowFallbackImage","fallbackStrategy","NativeImage","NativeImage2","ref","htmlWidth","htmlHeight","alt","rest","createElement","width","height","displayName","Image2","Image3","fallbackSrc","fallback","align","fit","referrerPolicy","providedFallback","shouldIgnoreFallbackImage","showFallbackImage","shared","objectFit","objectPosition","as","className","chakra2","forwardRef3","Img"],"sources":["C:/JZ/code/Hack-the-North/frontend/node_modules/@chakra-ui/image/dist/index.esm.js"],"sourcesContent":["// ../../react-shim.js\r\nimport React from \"react\";\r\n\r\n// src/image.tsx\r\nimport {\r\n  chakra,\r\n  forwardRef as forwardRef2\r\n} from \"@chakra-ui/system\";\r\n\r\n// ../../utilities/object-utils/dist/index.esm.js\r\nfunction omit(object, keysToOmit = []) {\r\n  const clone = Object.assign({}, object);\r\n  for (const key of keysToOmit) {\r\n    if (key in clone)\r\n      delete clone[key];\r\n  }\r\n  return clone;\r\n}\r\n\r\n// src/use-image.ts\r\nimport { useSafeLayoutEffect } from \"@chakra-ui/react-use-safe-layout-effect\";\r\nimport { useCallback, useEffect, useRef, useState } from \"react\";\r\nfunction useImage(props) {\r\n  const {\r\n    loading,\r\n    src,\r\n    srcSet,\r\n    onLoad,\r\n    onError,\r\n    crossOrigin,\r\n    sizes,\r\n    ignoreFallback\r\n  } = props;\r\n  const [status, setStatus] = useState(\"pending\");\r\n  useEffect(() => {\r\n    setStatus(src ? \"loading\" : \"pending\");\r\n  }, [src]);\r\n  const imageRef = useRef();\r\n  const load = useCallback(() => {\r\n    if (!src)\r\n      return;\r\n    flush();\r\n    const img = new Image();\r\n    img.src = src;\r\n    if (crossOrigin)\r\n      img.crossOrigin = crossOrigin;\r\n    if (srcSet)\r\n      img.srcset = srcSet;\r\n    if (sizes)\r\n      img.sizes = sizes;\r\n    if (loading)\r\n      img.loading = loading;\r\n    img.onload = (event) => {\r\n      flush();\r\n      setStatus(\"loaded\");\r\n      onLoad == null ? void 0 : onLoad(event);\r\n    };\r\n    img.onerror = (error) => {\r\n      flush();\r\n      setStatus(\"failed\");\r\n      onError == null ? void 0 : onError(error);\r\n    };\r\n    imageRef.current = img;\r\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\r\n  const flush = () => {\r\n    if (imageRef.current) {\r\n      imageRef.current.onload = null;\r\n      imageRef.current.onerror = null;\r\n      imageRef.current = null;\r\n    }\r\n  };\r\n  useSafeLayoutEffect(() => {\r\n    if (ignoreFallback)\r\n      return void 0;\r\n    if (status === \"loading\") {\r\n      load();\r\n    }\r\n    return () => {\r\n      flush();\r\n    };\r\n  }, [status, load, ignoreFallback]);\r\n  return ignoreFallback ? \"loaded\" : status;\r\n}\r\nvar shouldShowFallbackImage = (status, fallbackStrategy) => status !== \"loaded\" && fallbackStrategy === \"beforeLoadOrError\" || status === \"failed\" && fallbackStrategy === \"onError\";\r\n\r\n// src/native-image.tsx\r\nimport { forwardRef } from \"@chakra-ui/system\";\r\nvar NativeImage = forwardRef(function NativeImage2(props, ref) {\r\n  const { htmlWidth, htmlHeight, alt, ...rest } = props;\r\n  return /* @__PURE__ */ React.createElement(\"img\", {\r\n    width: htmlWidth,\r\n    height: htmlHeight,\r\n    ref,\r\n    alt,\r\n    ...rest\r\n  });\r\n});\r\nNativeImage.displayName = \"NativeImage\";\r\n\r\n// src/image.tsx\r\nvar Image2 = forwardRef2(function Image3(props, ref) {\r\n  const {\r\n    fallbackSrc,\r\n    fallback,\r\n    src,\r\n    srcSet,\r\n    align,\r\n    fit,\r\n    loading,\r\n    ignoreFallback,\r\n    crossOrigin,\r\n    fallbackStrategy = \"beforeLoadOrError\",\r\n    referrerPolicy,\r\n    ...rest\r\n  } = props;\r\n  const providedFallback = fallbackSrc !== void 0 || fallback !== void 0;\r\n  const shouldIgnoreFallbackImage = loading != null || ignoreFallback || !providedFallback;\r\n  const status = useImage({\r\n    ...props,\r\n    ignoreFallback: shouldIgnoreFallbackImage\r\n  });\r\n  const showFallbackImage = shouldShowFallbackImage(status, fallbackStrategy);\r\n  const shared = {\r\n    ref,\r\n    objectFit: fit,\r\n    objectPosition: align,\r\n    ...shouldIgnoreFallbackImage ? rest : omit(rest, [\"onError\", \"onLoad\"])\r\n  };\r\n  if (showFallbackImage) {\r\n    if (fallback)\r\n      return fallback;\r\n    return /* @__PURE__ */ React.createElement(chakra.img, {\r\n      as: NativeImage,\r\n      className: \"chakra-image__placeholder\",\r\n      src: fallbackSrc,\r\n      ...shared\r\n    });\r\n  }\r\n  return /* @__PURE__ */ React.createElement(chakra.img, {\r\n    as: NativeImage,\r\n    src,\r\n    srcSet,\r\n    crossOrigin,\r\n    loading,\r\n    referrerPolicy,\r\n    className: \"chakra-image\",\r\n    ...shared\r\n  });\r\n});\r\nImage2.displayName = \"Image\";\r\n\r\n// src/img.tsx\r\nimport { chakra as chakra2, forwardRef as forwardRef3 } from \"@chakra-ui/system\";\r\nvar Img = forwardRef3((props, ref) => /* @__PURE__ */ React.createElement(chakra2.img, {\r\n  ref,\r\n  as: NativeImage,\r\n  className: \"chakra-image\",\r\n  ...props\r\n}));\r\nexport {\r\n  Image2 as Image,\r\n  Img,\r\n  shouldShowFallbackImage,\r\n  useImage\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}